configfile: "config.yaml"
print ("config file:", config['samples'])


rule all:
    input:
        expand("sorted_reads/{sample}.bam.bai", sample=config["samples"])

rule bwa_map:
    input:
        "../Mus_musculus.GRCm38.dna_sm.primary_assembly.fa",
        "fastq_tiny_1000/{sample}.fastq"
        #lambda wildcards: config["samples"][wildcards.sample]
    output:
        temp("mapped_reads/{sample}.bam")
    #params:
    #    rg=r"@RG\tID:{sample}\tSM:{sample}"
    log:
        "logs/bwa_mem/{sample}.log"
    threads: 4
    shell:
        #"(bwa mem -R '{params.rg}' -t {threads} {input} | "
        "(bwa mem -t {threads} {input} | "
        "samtools view -Sb - > {output}) 2> {log}"


rule samtools_sort:
    input:
        "mapped_reads/{sample}.bam"
    output:
        protected("sorted_reads/{sample}.bam")
    shell:
        "samtools sort -T sorted_reads/{wildcards.sample} "
        "-O bam {input} > {output}"


rule samtools_index:
    input:
        "sorted_reads/{sample}.bam"
    output:
        "sorted_reads/{sample}.bam.bai"
    shell:
        "samtools index {input}"
